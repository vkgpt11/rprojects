getwd()
setwd()
setwd(".")
getwd()
setwd("E:\\Git\\rprojects\\MachineLearning\\MarketBasketAnalysis")
getwd()
setwd("E:\\Git\\rprojects\\MachineLearning\\Association Rule Mining")
data = read.csv("house-votes-84.data")
View(data)
str(data)
senate = as(data,"transactions")
senate = as(data,"transactions")
library("arules")
library("arulesViz")
install.packages("arules")
install.packages("arulesViz")
library("arules")
library("arules")
library("arulesViz")
senate = as(data,"transactions")
itemFrequencyPlot(senate,topN=20,type="absolute")
rule = apriori(senate,parameter = list(support=0.1,confidence=0.6))
top10 = head(rules, n=10, by ="confidence")
rules = apriori(senate,parameter = list(support=0.1,confidence=0.6))
top10 = head(rules, n=10, by ="confidence")
rm(rule)
inspect(top10)
rulesDemocrate = subset(rules,subset=rhs %in% "party=democrat" & lift>1.2)
rulesDemocrate = subset(rules,subset=rhs %in% "party=republican" & lift>1.2)
rulesDemocrate = subset(rules,subset=rhs %in% "party=democrat" & lift>1.2)
rulesRepublican = subset(rules,subset=rhs %in% "party=republican" & lift>1.2)
inspect(head(rulesDemocrate, n=10, by ="confidence"))
inspect(head(rulesRepublican, n=10, by ="confidence"))
plot(head(rulesDemocrat, n=5, by = "confidence"),method="graph",interactive=TRUE,shading=NA)
rulesDemocrat = subset(rules,subset=rhs %in% "party=democrat" & lift>1.2)
plot(head(rulesDemocrat, n=5, by = "confidence"),method="graph",interactive=TRUE,shading=NA)
plot(head(rulesDemocrat, n=5, by = "confidence"),method="graph",interactive=TRUE,shading=NA)
plot(head(rulesRepublican, n=5, by = "confidence"),method="graph",interactive=TRUE,shading=NA)
