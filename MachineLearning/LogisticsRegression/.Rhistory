comRegisterRegistry()
data = read.csv("knndata.csv",header = T, sep = ',', stringsAsFactors = F)
str(data)
dummy1 = as.data.frame(model.matrix(~Balance.of.Current.Account,data = data))[,-1]
dummy2 = as.data.frame(model.matrix(~Payment.of.Previous.Credits,data = data))[,-1]
dummy3 = as.data.frame(model.matrix(~Purpose.of.Credit, data=data))[,-1]
dummy4 = as.data.frame(model.matrix(~Value.of.Savings,data=data))[,-1]
dummy5 = as.data.frame(model.matrix(~Employed.by.Current.Employer.for,data = data))[,-1]
setwd("E:/Upgrade-DA/3. Predictive Analytics I/4. Supervised Classification - I/K-NN")
data = read.csv("knndata.csv",header = T, sep = ',', stringsAsFactors = F)
str(data)
dummy1 = as.data.frame(model.matrix(~Balance.of.Current.Account,data = data))[,-1]
dummy2 = as.data.frame(model.matrix(~Payment.of.Previous.Credits,data = data))[,-1]
dummy3 = as.data.frame(model.matrix(~Purpose.of.Credit, data=data))[,-1]
dummy4 = as.data.frame(model.matrix(~Value.of.Savings,data=data))[,-1]
dummy5 = as.data.frame(model.matrix(~Employed.by.Current.Employer.for,data = data))[,-1]
dummy6 = as.data.frame(model.matrix(~Installment.in...of.Available.Income,data = data))[,-1]
dummy7 = as.data.frame(model.matrix(~Marital.Status,data=data))[,-1]
dummy8 = as.data.frame(model.matrix(~Living.in.Current.Household.for,data=data))[,-1]
dummy9 = as.data.frame(model.matrix(~Most.Valuable.Assets,data=data))[,-1]
dummy10 = as.data.frame(model.matrix(~Gender,data=data))[,-1]
dummy11 = as.data.frame(model.matrix(~Further.running.credits,data=data))[,-1]
dummy12 = as.data.frame(model.matrix(~Type.of.Apartment,data=data))[,-1]
dummy13 = as.data.frame(model.matrix(~Number.of.previous.credits.at.this.bank, data=data))[,-1]
str(data)
data$Gender <- as.numeric(as.factor(data$Gender))
data$Gender
data$Gender <- c(0,1)
data$Gender
data = read.csv("knndata.csv",header = T, sep = ',', stringsAsFactors = F)
str(data)
data$Credit.Rating <- as.factor(data$Credit.Rating)
data$Credit.Rating <- as.factor(data$Credit.Rating)dummy1 = as.data.frame(model.matrix(~Balance.of.Current.Account,data = data))[,-1]
dummy2 = as.data.frame(model.matrix(~Payment.of.Previous.Credits,data = data))[,-1]
dummy3 = as.data.frame(model.matrix(~Purpose.of.Credit, data=data))[,-1]
dummy4 = as.data.frame(model.matrix(~Value.of.Savings,data=data))[,-1]
dummy5 = as.data.frame(model.matrix(~Employed.by.Current.Employer.for,data = data))[,-1]
dummy6 = as.data.frame(model.matrix(~Installment.in...of.Available.Income,data = data))[,-1]
dummy7 = as.data.frame(model.matrix(~Marital.Status,data=data))[,-1]
dummy8 = as.data.frame(model.matrix(~Living.in.Current.Household.for,data=data))[,-1]
dummy9 = as.data.frame(model.matrix(~Most.Valuable.Assets,data=data))[,-1]
data = read.csv("knndata.csv",header = T, sep = ',', stringsAsFactors = F)
str(data)
data$Credit.Rating <- as.factor(data$Credit.Rating)
dummy1 = as.data.frame(model.matrix(~Balance.of.Current.Account,data = data))[,-1]
dummy2 = as.data.frame(model.matrix(~Payment.of.Previous.Credits,data = data))[,-1]
dummy3 = as.data.frame(model.matrix(~Purpose.of.Credit, data=data))[,-1]
dummy4 = as.data.frame(model.matrix(~Value.of.Savings,data=data))[,-1]
dummy5 = as.data.frame(model.matrix(~Employed.by.Current.Employer.for,data = data))[,-1]
dummy6 = as.data.frame(model.matrix(~Installment.in...of.Available.Income,data = data))[,-1]
dummy7 = as.data.frame(model.matrix(~Marital.Status,data=data))[,-1]
dummy8 = as.data.frame(model.matrix(~Living.in.Current.Household.for,data=data))[,-1]
dummy9 = as.data.frame(model.matrix(~Most.Valuable.Assets,data=data))[,-1]
data$Gender <- as.numeric(as.factor(data$Gender))
data$Gender <- c(0,1)
dummy11 = as.data.frame(model.matrix(~Further.running.credits,data=data))[,-1]
KNN
data = read.csv("knndata.csv",header = T, sep = ',', stringsAsFactors = F)
str(data)
data$Credit.Rating <- as.factor(data$Credit.Rating)
dummy1 = as.data.frame(model.matrix(~Balance.of.Current.Account,data = data))[,-1]
dummy2 = as.data.frame(model.matrix(~Payment.of.Previous.Credits,data = data))[,-1]
dummy3 = as.data.frame(model.matrix(~Purpose.of.Credit, data=data))[,-1]
dummy4 = as.data.frame(model.matrix(~Value.of.Savings,data=data))[,-1]
dummy5 = as.data.frame(model.matrix(~Employed.by.Current.Employer.for,data = data))[,-1]
dummy6 = as.data.frame(model.matrix(~Installment.in...of.Available.Income,data = data))[,-1]
dummy7 = as.data.frame(model.matrix(~Marital.Status,data=data))[,-1]
dummy8 = as.data.frame(model.matrix(~Living.in.Current.Household.for,data=data))[,-1]
dummy9 = as.data.frame(model.matrix(~Most.Valuable.Assets,data=data))[,-1]
data$Gender <- as.numeric(as.factor(data$Gender))
KNN
data = read.csv("knndata.csv",header = T, sep = ',', stringsAsFactors = F)
str(data)
data$Credit.Rating <- as.factor(data$Credit.Rating)
dummy1 = as.data.frame(model.matrix(~Balance.of.Current.Account,data = data))[,-1]
dummy2 = as.data.frame(model.matrix(~Payment.of.Previous.Credits,data = data))[,-1]
dummy3 = as.data.frame(model.matrix(~Purpose.of.Credit, data=data))[,-1]
dummy4 = as.data.frame(model.matrix(~Value.of.Savings,data=data))[,-1]
dummy5 = as.data.frame(model.matrix(~Employed.by.Current.Employer.for,data = data))[,-1]
dummy6 = as.data.frame(model.matrix(~Installment.in...of.Available.Income,data = data))[,-1]
dummy7 = as.data.frame(model.matrix(~Marital.Status,data=data))[,-1]
dummy8 = as.data.frame(model.matrix(~Living.in.Current.Household.for,data=data))[,-1]
dummy9 = as.data.frame(model.matrix(~Most.Valuable.Assets,data=data))[,-1]
data$Gender <- as.factor(data$Gender)
data$Gender <- c(0,1)
data$Gender
data = read.csv("knndata.csv",header = T, sep = ',', stringsAsFactors = F)
str(data)
data$Credit.Rating <- as.factor(data$Credit.Rating)
dummy1 = as.data.frame(model.matrix(~Balance.of.Current.Account,data = data))[,-1]
dummy2 = as.data.frame(model.matrix(~Payment.of.Previous.Credits,data = data))[,-1]
dummy3 = as.data.frame(model.matrix(~Purpose.of.Credit, data=data))[,-1]
dummy4 = as.data.frame(model.matrix(~Value.of.Savings,data=data))[,-1]
dummy5 = as.data.frame(model.matrix(~Employed.by.Current.Employer.for,data = data))[,-1]
dummy6 = as.data.frame(model.matrix(~Installment.in...of.Available.Income,data = data))[,-1]
dummy7 = as.data.frame(model.matrix(~Marital.Status,data=data))[,-1]
dummy8 = as.data.frame(model.matrix(~Living.in.Current.Household.for,data=data))[,-1]
dummy9 = as.data.frame(model.matrix(~Most.Valuable.Assets,data=data))[,-1]
data$Gender <- as.numeric(as.factor(data$Gender))
dummy11 = as.data.frame(model.matrix(~Further.running.credits,data=data))[,-1]
dummy12 = as.data.frame(model.matrix(~Type.of.Apartment,data=data))[,-1]
dummy13 = as.data.frame(model.matrix(~Number.of.previous.credits.at.this.bank, data=data))[,-1]
dummy14 = as.data.frame(model.matrix(~Occupation,data=data))[,-1]
data = read.csv("knndata.csv",header = T, sep = ',', stringsAsFactors = F)
data = data[,-1]
str(data)
data$Credit.Rating <- as.factor(data$Credit.Rating)
str(data)
dummy1 = as.data.frame(model.matrix(~Balance.of.Current.Account,data = data))[,-1]
dummy2 = as.data.frame(model.matrix(~Payment.of.Previous.Credits,data = data))[,-1]
dummy3 = as.data.frame(model.matrix(~Purpose.of.Credit, data=data))[,-1]
dummy4 = as.data.frame(model.matrix(~Value.of.Savings,data=data))[,-1]
dummy5 = as.data.frame(model.matrix(~Employed.by.Current.Employer.for,data = data))[,-1]
dummy6 = as.data.frame(model.matrix(~Installment.in...of.Available.Income,data = data))[,-1]
dummy7 = as.data.frame(model.matrix(~Marital.Status,data=data))[,-1]
dummy8 = as.data.frame(model.matrix(~Living.in.Current.Household.for,data=data))[,-1]
dummy9 = as.data.frame(model.matrix(~Most.Valuable.Assets,data=data))[,-1]
data$Gender <- as.numeric(as.factor(data$Gender))
dummy11 = as.data.frame(model.matrix(~Further.running.credits,data=data))[,-1]
dummy12 = as.data.frame(model.matrix(~Type.of.Apartment,data=data))[,-1]
dummy13 = as.data.frame(model.matrix(~Number.of.previous.credits.at.this.bank, data=data))[,-1]
dummy14 = as.data.frame(model.matrix(~Occupation,data=data))[,-1]
data_new = cbind(data[,c(4)])
data$Gender <- as.numeric(as.factor(data$Gender))
str(data)
dummy <- as.data.frame(model.matrix( ~ Balance.of.Current.Account -1,
data = data))
View(dummy)
dummy <- as.data.frame(model.matrix( ~ Balance.of.Current.Account ,
data = data))
View(dummy)
View(dummy)
dummy <- as.data.frame(model.matrix( ~ Balance.of.Current.Account-1 ,
data = data))
View(dummy)
dummy <- as.data.frame(model.matrix( ~ Balance.of.Current.Account ,
data = data))
View(dummy)
data_new = cbind(data[,c(1, 3, 6,11,14)], dummy1,dummy2,dummy3,dummy4,dummy5,dummy6,dummy7,dummy8,dummy9,dummy11,dummy12,
dummy13,dummy14)
str(data_new)
set.seed(2)
s=sample(1:nrow(data1),0.7*nrow(data1))
str(s)
s=sample(1:nrow(data1),0.7*nrow(data1))
set.seed(2)
s=sample(1:nrow(data_new),0.7*nrow(data_new))
str(s)
data_train=data_new[s,]
data_test=data_new[-s,]
cl <- data_train[, 1]
implementKnn <- knn(data_train[,-1],data_test[,-1],cl
,k=1,prob=T)
require(class)
implementKnn <- knn(data_train[,-1],data_test[,-1],cl
,k=1,prob=T)
confusionMatrix(implementKnn,data_test[,1])
require(caret)
confusionMatrix(implementKnn,data_test[,1])
pred = prediction(attr(implementKnn,"prob"),data_test[,-1])
pred
pred = prediction(attr(implementKnn,"prob"),data_test[,-1])
require(ROCR )
pred = prediction(attr(implementKnn,"prob"),data_test[,-1])
pred = prediction(attr(implementKnn,"prob"),data_test[,1])
pred
perf = performance(perd,"trp","fpr")
perf = performance(pred,"trp","fpr")
perf = performance(pred,"tpr","fpr")
plot(pref, col="black",lty=3,lwd=3)
plot(perf, col="black",lty=3,lwd=3)
auc = performance(pred,"auc")
auc
implementKnn <- knn(data_train[,-1],data_test[,-1],cl
,k=3,prob=T)
require(caret)
require(ROCR )
confusionMatrix(implementKnn,data_test[,1])
pred = prediction(attr(implementKnn,"prob"),data_test[,1])
pred
perf = performance(pred,"tpr","fpr")
plot(perf, col="black",lty=3,lwd=3)
auc = performance(pred,"auc")
auc
implementKnn <- knn(data_train[,-1],data_test[,-1],cl
,k=7,prob=T)
require(caret)
require(ROCR )
confusionMatrix(implementKnn,data_test[,1])
pred = prediction(attr(implementKnn,"prob"),data_test[,1])
pred
perf = performance(pred,"tpr","fpr")
plot(perf, col="black",lty=3,lwd=3)
auc = performance(pred,"auc")
auc
implementKnn <- knn(data_train[,-1],data_test[,-1],cl
,k=11,prob=T)
require(caret)
require(ROCR )
confusionMatrix(implementKnn,data_test[,1])
pred = prediction(attr(implementKnn,"prob"),data_test[,1])
pred
perf = performance(pred,"tpr","fpr")
plot(perf, col="black",lty=3,lwd=3)
auc = performance(pred,"auc")
auc
typeof(auc)
model <- train(Credit.Rating~., data=data_train, method='knn',
tuneGrid=expand.grid(.k=1:50),
matric="Accuracy",
trControl=trainControl(
method = 'repeatedcv',
number = 10,
repeats = 15))
model <- train(Credit.Rating~.,
data=data_train, method='knn',
tuneGrid=expand.grid(.k=1:20),
matric="Accuracy",
trControl=trainControl(
method = 'repeatedcv',
number = 10,
repeats = 15))
model <- train(Credit.Rating~.,
data=data_train, method='knn',
tuneGrid=expand.grid(.k=1:5),
matric="Accuracy",
trControl=trainControl(
method = 'repeatedcv',
number = 10,
repeats = 15))
model <- train(
Credit.Rating~.,
data=data_train,
method='knn',
tuneGrid=expand.grid(.k=1:50),
metric='Accuracy',
trControl=trainControl(
method='repeatedcv',
number=10,
repeats=15))
model <- train(Credit.Rating~.,
data=data_train, method='knn',
tuneGrid=expand.grid(.k=1:5),
matric='Accuracy',
trControl=trainControl(
method = 'repeatedcv',
number = 10,
repeats = 15))
model <- train(Credit.Rating~.,
data=data_train,
method='knn',
tuneGrid=expand.grid(.k=1:50),
metric='Accuracy',
trControl=trainControl(
method='repeatedcv',
number=10,
repeats=15))
model <- train(Credit.Rating~.,
data=data_train, method='knn',
tuneGrid=expand.grid(.k=1:5),
metric='Accuracy',
trControl=trainControl(
method = 'repeatedcv',
number = 10,
repeats = 15))
model <- train(Credit.Rating~.,
data=data_train, method='knn',
tuneGrid = expand.grid(.k=1:50),
metric='Accuracy',
trControl=trainControl(
method='repeatedcv',
number=10,
repeats=15))
plot(model)
implementKnn <- knn(data_train[,-1],data_test[,-1],cl
,k=18,prob=T)
require(caret)
require(ROCR )
confusionMatrix(implementKnn,data_test[,1])
pred = prediction(attr(implementKnn,"prob"),data_test[,1])
pred
perf = performance(pred,"tpr","fpr")
plot(perf, col="black",lty=3,lwd=3)
auc = performance(pred,"auc")
confusionMatrix(implementKnn,data_test[,1])
ggplot(data, aes(x=Credit.Rating)) +geom_bar()
confusionMatrix(implementKnn,data_test[,1],positive = "good")
data<-read.csv("knndata.csv", header = TRUE, sep = ',', stringsAsFactors= FALSE)
data <- data[, -1]
sum(is.na(data))
data$Credit.Rating <- as.factor(data$Credit.Rating)
data$Credit.Rating <- as.factor(data$Credit.Rating)
#Converting Categorical Variables to Numeric by Dummy encoding
dummy <- as.data.frame(model.matrix( ~ Balance.of.Current.Account -1,
data = data))
dummy1 <- as.data.frame(model.matrix( ~ Payment.of.Previous.Credits -1,
data = data))
dummy2 <- as.data.frame(model.matrix( ~ Purpose.of.Credit -1,
data = data))
dummy3 <- as.data.frame(model.matrix( ~ Value.of.Savings -1,
data = data))
dummy4 <- as.data.frame(model.matrix( ~ Employed.by.Current.Employer.for -1,
data = data))
dummy5 <- as.data.frame(model.matrix( ~ Installment.in...of.Available.Income -1,
data = data))
dummy6 <- as.data.frame(model.matrix( ~ Marital.Status -1,
data = data))
# Gender has 2 categories. So no dummy variables needed
data$Gender <- as.numeric(as.factor(data$Gender))
#Dummy Variable Creation continues
dummy7 <- as.data.frame(model.matrix( ~ Living.in.Current.Household.for -1,
data = data))
dummy8 <- as.data.frame(model.matrix( ~ Most.Valuable.Assets -1,
data = data))
dummy9 <- as.data.frame(model.matrix( ~ Further.running.credits -1,
data = data))
dummy10 <- as.data.frame(model.matrix( ~ Type.of.Apartment -1,
data = data))
dummy11 <- as.data.frame(model.matrix( ~ Number.of.previous.credits.at.this.bank -1,
data = data))
dummy12 <- as.data.frame(model.matrix( ~ Occupation -1,
data = data))
#Collating the data together.
#Keeping only the original numeric variabes and the dummy numeric variables
data1 <- cbind(data[, c(1, 3, 6, 11, 14)], dummy[, -1], dummy1[,-1],
dummy2[,-1], dummy3[,-1], dummy4[,-1], dummy5[, -1],
dummy6[, -1], dummy7[, -1], dummy8[, -1], dummy9[, -1],
dummy10[, -1], dummy11[, -1], dummy12[, -1])
# Scaling the numeric variables
data1$Credit.Rating <- as.factor(data1$Credit.Rating)
data1$Duration.of.Credit <- scale(data1$Duration.of.Credit)
data1$Amount.of.Credit <- scale(data1$Amount.of.Credit)
data1$Age <- scale(data1$Age)
# Splitting into training and testing
set.seed(2)
s=sample(1:nrow(data1),0.7*nrow(data1))
# training data contains 70% of the data
data_train=data1[s,]
#testing data contains 30% of the data
data_test=data1[-s,]
# True class labels of training data
cl <- data_train[, 1]
#Training and testing data without the true labels
data_train <- data_train[,-1]
data_test1 <- data_test[, -1]
#KNn with 1NN
impknn1 <- knn(data_train,data_test1, cl, k = 1,
prob = TRUE)
data<-read.csv("knndata.csv", header = TRUE, sep = ',', stringsAsFactors= FALSE)
data<-read.csv("knndata.csv", header = TRUE, sep = ',', stringsAsFactors= FALSE)
data<-read.csv("knndata.csv", header = TRUE, sep = ',', stringsAsFactors= FALSE)
data<-read.csv("knndata.csv", header = TRUE, sep = ',', stringsAsFactors= FALSE)
data<-read.csv("knndata.csv", header = TRUE, sep = ',', stringsAsFactors= FALSE)
data<-read.csv("knndata.csv", header = TRUE, sep = ',', stringsAsFactors= FALSE)
data<-read.csv("knndata.csv", header = TRUE, sep = ',', stringsAsFactors= FALSE)
data <- data[, -1]
sum(is.na(data))
data$Credit.Rating <- as.factor(data$Credit.Rating)
dummy <- as.data.frame(model.matrix( ~ Balance.of.Current.Account -1,
data = data))
dummy1 <- as.data.frame(model.matrix( ~ Payment.of.Previous.Credits -1,
data = data))
dummy2 <- as.data.frame(model.matrix( ~ Purpose.of.Credit -1,
data = data))
dummy3 <- as.data.frame(model.matrix( ~ Value.of.Savings -1,
data = data))
dummy4 <- as.data.frame(model.matrix( ~ Employed.by.Current.Employer.for -1,
data = data))
dummy5 <- as.data.frame(model.matrix( ~ Installment.in...of.Available.Income -1,
data = data))
dummy6 <- as.data.frame(model.matrix( ~ Marital.Status -1,
data = data))
data$Gender <- as.numeric(as.factor(data$Gender))
dummy7 <- as.data.frame(model.matrix( ~ Living.in.Current.Household.for -1,
data = data))
dummy8 <- as.data.frame(model.matrix( ~ Most.Valuable.Assets -1,
data = data))
dummy9 <- as.data.frame(model.matrix( ~ Further.running.credits -1,
data = data))
dummy10 <- as.data.frame(model.matrix( ~ Type.of.Apartment -1,
data = data))
dummy11 <- as.data.frame(model.matrix( ~ Number.of.previous.credits.at.this.bank -1,
data = data))
dummy12 <- as.data.frame(model.matrix( ~ Occupation -1,
data = data))
data1 <- cbind(data[, c(1, 3, 6, 11, 14)], dummy[, -1], dummy1[,-1],
dummy2[,-1], dummy3[,-1], dummy4[,-1], dummy5[, -1],
dummy6[, -1], dummy7[, -1], dummy8[, -1], dummy9[, -1],
dummy10[, -1], dummy11[, -1], dummy12[, -1])
data1$Credit.Rating <- as.factor(data1$Credit.Rating)
data1$Duration.of.Credit <- scale(data1$Duration.of.Credit)
data1$Amount.of.Credit <- scale(data1$Amount.of.Credit)
data1$Age <- scale(data1$Age)
set.seed(2)
s=sample(1:nrow(data1),0.7*nrow(data1))
data_train=data1[s,]
data_test=data1[-s,]
cl <- data_train[, 1]
data_train <- data_train[,-1]
data_test1 <- data_test[, -1]
impknn1 <- knn(data_train,data_test1, cl, k = 1,
prob = TRUE)
library(class)
impknn1 <- knn(data_train,data_test1, cl, k = 1,
prob = TRUE)
table(impknn1,data_test[,1])
impknn1
table(impknn1,data_test[,1])
confusionMatrix(impknn1, data_test[,1], positive ="good" )
library(caret)
table(impknn1,data_test[,1])
confusionMatrix(impknn1, data_test[,1], positive ="good" )
summary(data1$Age)
vector = sample(1:100)
vector
weightvector = sample(1:100)
heightvector = sample(1:7)
weightvector
heightvector
heightvector = sample(1:7,100)
heightvector = sample(1:7,size=100)
heightvector = sample(size=100)
heightvector = sample(x=1,size=100)
heightvector = sample(x=1:100,size=100)
heightvector
weightvector = sample(x=1:100,size=100)
heightvector = sample(x=1:7,size=100)
heightvector = sample(x=1:7,size=100,replace = TRUE)
weightvector
heightvector
weightvector=scale(weightvector)
heightvector = scale(heightvector)
weightvector
heightvector
weightvector = sample(x=1:100,size=100)
heightvector = sample(x=1:7,size=100,replace = TRUE)
plot(heightvector,weightvector)
plot(weightvector,heightvector)
weightvector=scale(weightvector)
heightvector = scale(heightvector)
plot(weightvector,heightvector)
plot(weightvector)
plot(weightvector)
plot(weightvector,y=count(weightvector))
plot(weightvector,y=length(weightvector))
plot(weightvector,y=sum(weightvector))
confusionMatrix(impknn1, data_test[,1], positive ="good" )
impknn3 <- knn(data_train,data_test1, cl, k = 3,
prob = TRUE)
table(impknn3,data_test[,1])
confusionMatrix(impknn3, data_test[,1], positive ="good")
impknn5 <- knn(data_train,data_test1, cl, k = 5,
prob = TRUE)
table(impknn5,data_test[,1])
confusionMatrix(impknn5, data_test[,1], positive ="good")
impknn7 <- knn(data_train,data_test1, cl, k = 7,  prob = TRUE)
table(impknn7,data_test[,1])
confusionMatrix(impknn7, data_test[,1], positive = "good")
pred <- prediction(attr(impknn1,"prob"), data_test[,"Credit.Rating"])
perf <- performance(pred,"tpr","fpr")
par(mar=c(5,5,2,2),xaxs = "i",yaxs = "i",cex.axis=1.3,cex.lab=1.4)
plot(perf,col="black",lty=3, lwd=3)
pred <- prediction(attr(impknn7,"prob"), data_test[,"Credit.Rating"])
perf <- performance(pred,"tpr","fpr")
par(mar=c(5,5,2,2),xaxs = "i",yaxs = "i",cex.axis=1.3,cex.lab=1.4)
plot(perf,col="black",lty=3, lwd=3)
auc <- performance(pred,"auc")
auc
pred <- prediction(attr(impknn7,"prob"), data_test[,"Credit.Rating"])
perf <- performance(pred,"tpr","fpr")
par(mar=c(5,5,2,2),xaxs = "i",yaxs = "i",cex.axis=1.3,cex.lab=1.4)
plot(perf,col="black",lty=3, lwd=3)
auc <- performance(pred,"auc")
auc
plot(perf,col="black",lty=3, lwd=3)
setwd("E:\\Git\\rprojects\\MachineLearning\\LogisticsRegression")
baseball = read.csv("baseball.csv")
summary(baseball)
sum(is.na(baseball))
set.seed(2)
s= sample(1:nrow(baseball),0.7*nrow(baseball))
base_train = baseball[s,]
base_test = baseball[-s,]
model_runs = glm(Playoffs ~ RS, family = binomial,data=base_train)
summary(model_runs)
pred_runs = predict(model_runs,base_test,type="response")
base_test$pred = ifelse(pred_runs>.1, "Yes","No")
base_test$pred_prob = pred_runs
table(base_test$Playoffs,base_test$pred)
filepath="E:\\Git\\rprojects\\MachineLearning\\LogisticsRegression"
setwd(filepath)
baseball = read.csv("baseball_allAttributes.csv")
summary(baseball)
str(baseball)
sum(is.na(baseball))
quantile(baseball$RS,c(.95,.96,.97,.98,.99,1))
quantile(baseball$RA,c(.95,.96,.97,.98,.99,1))
quantile(baseball$OBP,c(.95,.96,.97,.98,.99,1))
quantile(baseball$SLG,c(.95,.96,.97,.98,.99,1))
quantile(baseball$BA,c(.95,.96,.97,.98,.99,1))
cor(baseball)
summary(baseball)
cor(baseball[,-1])
set.seed(1000)
library(caTools)
s=sample.split(0:nrow(baseball),SplitRatio=.7)
table(s)
train_baseball = baseball[s,]
test_baseball = baseball[!s,]
initial_model = glm(Playoffs ~ ., data=train_baseball[,-1],family = "binomial")
summary(initial_model)
best_model = step(initial_model,direction = "both")
